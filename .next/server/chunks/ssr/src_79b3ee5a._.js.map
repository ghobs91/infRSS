{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/input.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nexport const Input: React.FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input\n      className={`border border-gray-300 rounded-xl px-4 py-2 w-full text-base focus:outline-none focus:ring-2 focus:ring-blue-500 ${className}`}\n      {...props}\n    />\n  );\n};"],"names":[],"mappings":";;;;;AAIO,MAAM,QAA8B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IACjE,qBACE,8OAAC;QACC,WAAW,CAAC,iHAAiH,EAAE,WAAW;QACzI,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/button.tsx"],"sourcesContent":["interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"destructive\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({ className = \"\", variant = \"default\", children, ...props }) => {\n  const base = \"font-semibold px-4 py-2 rounded-xl shadow-sm transition-colors\";\n  const variants = {\n    default: \"bg-blue-600 hover:bg-blue-700 text-white\",\n    destructive: \"bg-red-600 hover:bg-red-700 text-white\",\n  };\n\n  return (\n    <button\n      className={`${base} ${variants[variant]} ${className}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,SAAgC,CAAC,EAAE,YAAY,EAAE,EAAE,UAAU,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACvG,MAAM,OAAO;IACb,MAAM,WAAW;QACf,SAAS;QACT,aAAa;IACf;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,KAAK,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/card.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card: React.FC<CardProps> = ({ className, children, ...props }) => {\n  return (\n    <div\n      className={`bg-white border border-gray-200 rounded-2xl shadow p-4 ${className}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent: React.FC<CardContentProps> = ({ className, children, ...props }) => {\n  return (\n    <div className={`space-y-1 ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};"],"names":[],"mappings":";;;;;;AAIO,MAAM,OAA4B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACzE,qBACE,8OAAC;QACC,WAAW,CAAC,uDAAuD,EAAE,WAAW;QAC/E,GAAG,KAAK;kBAER;;;;;;AAGP;AAIO,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACvF,qBACE,8OAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;QAAG,GAAG,KAAK;kBAChD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/lib/rssUtils.ts"],"sourcesContent":["// lib/rssUtils.ts\n\ninterface FeedData {\n  title: string;\n  url: string;\n}\n\n// üîÅ Use a public CORS proxy for cross-origin RSS/HTML fetches\nexport const fetchWithCors = async (url: string): Promise<Response> => {\n    const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(url)}`;\n    return fetch(proxyUrl);\n};\n\nexport async function getFeedUrlFromHtml(siteUrl: string): Promise<string | null> {\n    try {\n      const res = await fetchWithCors(siteUrl);\n      const html = await res.text();\n  \n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n  \n      const linkEl = doc.querySelector('link[type=\"application/rss+xml\"], link[type=\"application/atom+xml\"]');\n      if (linkEl && linkEl.getAttribute(\"href\")) {\n        const href = linkEl.getAttribute(\"href\")!;\n        const resolved = new URL(href, siteUrl);\n        return resolved.toString();\n      }\n  \n      return null;\n    } catch (err) {\n      console.error(\"Failed to resolve feed URL:\", err);\n      return null;\n    }\n  }\n  \n\nexport async function fetchAndParseRSS(feedUrl: string): Promise<{ title: string; items: { title: string; link: string; pubDate: string }[] } | null> {\n  try {\n    const res = await fetchWithCors(feedUrl);\n    const text = await res.text();\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(text, \"application/xml\");\n\n    const title = doc.querySelector(\"channel > title\")?.textContent || \"Untitled Feed\";\n    const items: { title: string; link: string; pubDate: string }[] = [];\n\n    doc.querySelectorAll(\"item\").forEach((item) => {\n      const title = item.querySelector(\"title\")?.textContent || \"(No title)\";\n      const link = item.querySelector(\"link\")?.textContent || \"\";\n      const pubDate = item.querySelector(\"pubDate\")?.textContent || \"\";\n      items.push({ title, link, pubDate });\n    });\n\n    return { title, items };\n  } catch (err) {\n    console.error(\"Failed to fetch or parse RSS:\", err);\n    return null;\n  }\n}\n\n// Persistence\nexport function saveFeedToStorage(feed: FeedData) {\n    const stored = localStorage.getItem(\"feeds\");\n    const current: FeedData[] = stored ? JSON.parse(stored) : [];\n    if (!current.find((f) => f.url === feed.url)) {\n      const updated = [...current, feed];\n      localStorage.setItem(\"feeds\", JSON.stringify(updated));\n    }\n  }\n  \nexport function loadFeedsFromStorage(): FeedData[] {\n    const stored = localStorage.getItem(\"feeds\");\n    return stored ? JSON.parse(stored) : [];\n}  \n\nexport function removeFeedFromStorage(url: string) {\n    const stored = localStorage.getItem(\"feeds\");\n    const current: FeedData[] = stored ? JSON.parse(stored) : [];\n    const updated = current.filter((feed) => feed.url !== url);\n    localStorage.setItem(\"feeds\", JSON.stringify(updated));\n}\n  \n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;;;AAQX,MAAM,gBAAgB,OAAO;IAChC,MAAM,WAAW,CAAC,mCAAmC,EAAE,mBAAmB,MAAM;IAChF,OAAO,MAAM;AACjB;AAEO,eAAe,mBAAmB,OAAe;IACpD,IAAI;QACF,MAAM,MAAM,MAAM,cAAc;QAChC,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,SAAS,IAAI;QACnB,MAAM,MAAM,OAAO,eAAe,CAAC,MAAM;QAEzC,MAAM,SAAS,IAAI,aAAa,CAAC;QACjC,IAAI,UAAU,OAAO,YAAY,CAAC,SAAS;YACzC,MAAM,OAAO,OAAO,YAAY,CAAC;YACjC,MAAM,WAAW,IAAI,IAAI,MAAM;YAC/B,OAAO,SAAS,QAAQ;QAC1B;QAEA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF;AAGK,eAAe,iBAAiB,OAAe;IACpD,IAAI;QACF,MAAM,MAAM,MAAM,cAAc;QAChC,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,SAAS,IAAI;QACnB,MAAM,MAAM,OAAO,eAAe,CAAC,MAAM;QAEzC,MAAM,QAAQ,IAAI,aAAa,CAAC,oBAAoB,eAAe;QACnE,MAAM,QAA4D,EAAE;QAEpE,IAAI,gBAAgB,CAAC,QAAQ,OAAO,CAAC,CAAC;YACpC,MAAM,QAAQ,KAAK,aAAa,CAAC,UAAU,eAAe;YAC1D,MAAM,OAAO,KAAK,aAAa,CAAC,SAAS,eAAe;YACxD,MAAM,UAAU,KAAK,aAAa,CAAC,YAAY,eAAe;YAC9D,MAAM,IAAI,CAAC;gBAAE;gBAAO;gBAAM;YAAQ;QACpC;QAEA,OAAO;YAAE;YAAO;QAAM;IACxB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;AACF;AAGO,SAAS,kBAAkB,IAAc;IAC5C,MAAM,SAAS,aAAa,OAAO,CAAC;IACpC,MAAM,UAAsB,SAAS,KAAK,KAAK,CAAC,UAAU,EAAE;IAC5D,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,GAAG,KAAK,KAAK,GAAG,GAAG;QAC5C,MAAM,UAAU;eAAI;YAAS;SAAK;QAClC,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;IAC/C;AACF;AAEK,SAAS;IACZ,MAAM,SAAS,aAAa,OAAO,CAAC;IACpC,OAAO,SAAS,KAAK,KAAK,CAAC,UAAU,EAAE;AAC3C;AAEO,SAAS,sBAAsB,GAAW;IAC7C,MAAM,SAAS,aAAa,OAAO,CAAC;IACpC,MAAM,UAAsB,SAAS,KAAK,KAAK,CAAC,UAAU,EAAE;IAC5D,MAAM,UAAU,QAAQ,MAAM,CAAC,CAAC,OAAS,KAAK,GAAG,KAAK;IACtD,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;AACjD","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/lib/useTransformerWorker.ts"],"sourcesContent":["// lib/useTransformerWorker.ts\n\ninterface FeedData {\n    title: string;\n    url: string;\n  }\n  \n  export async function suggestFeedsWithWorker(topic: string, feeds: FeedData[]): Promise<FeedData[]> {\n    try {\n      const response = await fetch(\"/api/suggest\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ topic, feeds }),\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch suggestions\");\n      return await response.json();\n    } catch (err) {\n      console.error(\"suggestFeedsWithWorker error:\", err);\n      return [];\n    }\n  }\n  \n  "],"names":[],"mappings":"AAAA,8BAA8B;;;;AAOrB,eAAe,uBAAuB,KAAa,EAAE,KAAiB;IAC3E,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAM;QACtC;QACA,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAClC,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/app/page.tsx"],"sourcesContent":["// app/page.tsx\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  getFeedUrlFromHtml,\n  fetchAndParseRSS,\n  loadFeedsFromStorage,\n  saveFeedToStorage,\n} from \"@/lib/rssUtils\";\nimport { suggestFeedsWithWorker } from \"@/lib/useTransformerWorker\";\n\ninterface FeedData {\n  title: string;\n  url: string;\n}\n\nexport default function HomePage() {\n  const [feedUrlInput, setFeedUrlInput] = useState(\"\");\n  const [articles, setArticles] = useState<{ title: string; link: string; pubDate: string }[]>([]);\n  const [topic, setTopic] = useState(\"\");\n  const [suggestedFeeds, setSuggestedFeeds] = useState<FeedData[]>([]);\n\n  useEffect(() => {\n    const loadSavedFeeds = async () => {\n      const feeds = loadFeedsFromStorage();\n      const allArticles = await Promise.all(\n        feeds.map(async (feed) => {\n          const data = await fetchAndParseRSS(feed.url);\n          return data?.items || [];\n        })\n      );\n      setArticles(allArticles.flat());\n    };\n    loadSavedFeeds();\n  }, []);\n\n  const handleAddFeed = async () => {\n    const resolvedFeedUrl = await getFeedUrlFromHtml(feedUrlInput);\n    if (resolvedFeedUrl) {\n      const feedData = await fetchAndParseRSS(resolvedFeedUrl);\n      if (feedData) {\n        saveFeedToStorage({ title: feedData.title, url: resolvedFeedUrl });\n        setArticles((prev) => [...prev, ...feedData.items]);\n      }\n    }\n  };\n\n  const handleTopicSuggest = async () => {\n    const results = await suggestFeedsWithWorker(topic, []); // API now auto-fetches feeds by topic\n    setSuggestedFeeds(results);\n  };\n\n  return (\n    <main className=\"space-y-8\">\n      <section className=\"space-y-4\">\n        <h1 className=\"text-2xl font-semibold text-gray-800\">Add Feed</h1>\n        <div className=\"flex flex-col sm:flex-row gap-3\">\n          <Input\n            placeholder=\"Enter site URL or RSS feed\"\n            value={feedUrlInput}\n            onChange={(e) => setFeedUrlInput(e.target.value)}\n            className=\"flex-1 border-gray-300\"\n          />\n          <Button onClick={handleAddFeed}>Add Feed</Button>\n        </div>\n      </section>\n\n      <section className=\"space-y-4\">\n        <h2 className=\"text-2xl font-semibold text-gray-800\">Suggest Feeds</h2>\n        <div className=\"flex flex-col sm:flex-row gap-3\">\n          <Input\n            placeholder=\"Enter a topic you're interested in\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            className=\"flex-1 border-gray-300\"\n          />\n          <Button onClick={handleTopicSuggest}>Suggest</Button>\n        </div>\n        <div className=\"grid gap-3\">\n          {suggestedFeeds.map((feed) => (\n            <Card key={feed.url} className=\"bg-white border border-gray-200 shadow-sm\">\n              <CardContent className=\"p-4\">\n                <p className=\"font-medium text-gray-800\">{feed.title}</p>\n                <p className=\"text-sm text-gray-500\">{feed.url}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"space-y-4\">\n        <h2 className=\"text-2xl font-semibold text-gray-800\">Articles</h2>\n        <div className=\"grid gap-4\">\n          {articles.map((article, idx) => (\n            <Card key={idx} className=\"bg-white border border-gray-200 shadow-sm\">\n              <CardContent className=\"p-4\">\n                <a href={article.link} className=\"text-lg font-medium text-blue-600 hover:underline\">\n                  {article.title}\n                </a>\n                <p className=\"text-sm text-gray-500\">{article.pubDate}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}