{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/input.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nexport const Input: React.FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input\n      className={`border border-gray-300 rounded-xl px-4 py-2 w-full text-base focus:outline-none focus:ring-2 focus:ring-blue-500 ${className}`}\n      {...props}\n    />\n  );\n};"],"names":[],"mappings":";;;;;AAIO,MAAM,QAA8B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IACjE,qBACE,8OAAC;QACC,WAAW,CAAC,iHAAiH,EAAE,WAAW;QACzI,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/button.tsx"],"sourcesContent":["interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"destructive\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({ className = \"\", variant = \"default\", children, ...props }) => {\n  const base = \"font-semibold px-4 py-2 rounded-xl shadow-sm transition-colors\";\n  const variants = {\n    default: \"bg-blue-600 hover:bg-blue-700 text-white\",\n    destructive: \"bg-red-600 hover:bg-red-700 text-white\",\n  };\n\n  return (\n    <button\n      className={`${base} ${variants[variant]} ${className}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,SAAgC,CAAC,EAAE,YAAY,EAAE,EAAE,UAAU,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACvG,MAAM,OAAO;IACb,MAAM,WAAW;QACf,SAAS;QACT,aAAa;IACf;IAEA,qBACE,8OAAC;QACC,WAAW,GAAG,KAAK,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/components/ui/card.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card: React.FC<CardProps> = ({ className, children, ...props }) => {\n  return (\n    <div\n      className={` border border-gray-800 rounded-2xl shadow p-4 ${className}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent: React.FC<CardContentProps> = ({ className, children, ...props }) => {\n  return (\n    <div className={`space-y-1 ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};"],"names":[],"mappings":";;;;;;AAIO,MAAM,OAA4B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACzE,qBACE,8OAAC;QACC,WAAW,CAAC,+CAA+C,EAAE,WAAW;QACvE,GAAG,KAAK;kBAER;;;;;;AAGP;AAIO,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACvF,qBACE,8OAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;QAAG,GAAG,KAAK;kBAChD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/lib/rssUtils.ts"],"sourcesContent":["// lib/rssUtils.ts\n\ninterface FeedData {\n  title: string;\n  url: string;\n}\n\ninterface Article {\n  title: string;\n  link: string;\n  pubDate: string;\n  thumbnail?: string;\n  sourceDomain: string;\n}\n\nexport async function getFeedUrlFromHtml(siteUrl: string): Promise<string | null> {\n  try {\n    const res = await fetchWithCors(siteUrl);\n    const html = await res.text();\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const linkEl = doc.querySelector('link[type=\"application/rss+xml\"], link[rel=\"alternate\"][type=\"application/rss+xml\"]');\n    if (linkEl && linkEl.getAttribute(\"href\")) {\n      const href = linkEl.getAttribute(\"href\")!;\n      const url = new URL(href, siteUrl);\n      return url.toString();\n    }\n    return null;\n  } catch (err) {\n    console.error(\"Failed to resolve feed URL:\", err);\n    return null;\n  }\n}\n\nexport async function fetchAndParseRSS(feedUrl: string): Promise<{ title: string; items: Article[] } | null> {\n  try {\n    const res = await fetchWithCors(feedUrl);\n    const text = await res.text();\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(text, \"application/xml\");\n\n    const title = doc.querySelector(\"channel > title\")?.textContent || \"Untitled Feed\";\n    const items: Article[] = [];\n\n    doc.querySelectorAll(\"item\").forEach((item) => {\n      const title = item.querySelector(\"title\")?.textContent || \"(No title)\";\n      const link = item.querySelector(\"link\")?.textContent || \"\";\n      const pubDate = item.querySelector(\"pubDate\")?.textContent || \"\";\n\n      // Extended thumbnail logic\n      let thumbnail: string | undefined;\n\n      const mediaThumb = item.querySelector(\"media\\\\:thumbnail\");\n      const mediaContent = item.querySelector(\"media\\\\:content\");\n      const enclosure = item.querySelector(\"enclosure\");\n\n      if (mediaThumb?.getAttribute(\"url\")) {\n        thumbnail = mediaThumb.getAttribute(\"url\") || undefined;\n      } else if (mediaContent?.getAttribute(\"url\")?.includes(\"image\")) {\n        thumbnail = mediaContent.getAttribute(\"url\") || undefined;\n      } else if (enclosure?.getAttribute(\"type\")?.startsWith(\"image\")) {\n        thumbnail = enclosure.getAttribute(\"url\") || undefined;\n      } else {\n        const desc = item.querySelector(\"description\")?.textContent || \"\";\n        const content = item.querySelector(\"content\\\\:encoded\")?.textContent || \"\";\n        const combined = desc + content;\n        const match = combined.match(/<img[^>]+src=[\"']([^\"']+)[\"']/);\n        if (match) thumbnail = match[1];\n      }\n\n      let sourceDomain = \"\";\n      try {\n        sourceDomain = link ? new URL(link).hostname.replace(\"www.\", \"\") : \"\";\n      } catch {\n        console.warn(\"Invalid article link:\", link);\n      }\n\n      items.push({ title, link, pubDate, thumbnail, sourceDomain });\n    });\n\n    return { title, items };\n  } catch (err) {\n    console.error(\"Failed to fetch or parse RSS:\", err);\n    return null;\n  }\n}\n\nexport const fetchWithCors = async (url: string): Promise<Response> => {\n  return fetch(`/api/proxy?url=${encodeURIComponent(url)}`);\n};\n\nexport function saveFeedToStorage(feed: FeedData) {\n  const stored = localStorage.getItem(\"feeds\");\n  const current: FeedData[] = stored ? JSON.parse(stored) : [];\n  if (!current.find((f) => f.url === feed.url)) {\n    const updated = [...current, feed];\n    localStorage.setItem(\"feeds\", JSON.stringify(updated));\n  }\n}\n\nexport function loadFeedsFromStorage(): FeedData[] {\n  const stored = localStorage.getItem(\"feeds\");\n  return stored ? JSON.parse(stored) : [];\n}\n\nexport function removeFeedFromStorage(url: string) {\n  const stored = localStorage.getItem(\"feeds\");\n  const current: FeedData[] = stored ? JSON.parse(stored) : [];\n  const updated = current.filter((feed) => feed.url !== url);\n  localStorage.setItem(\"feeds\", JSON.stringify(updated));\n}\n\nexport type { FeedData, Article };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/lib/useTransformerWorker.ts"],"sourcesContent":["// lib/useTransformerWorker.ts\n\ninterface FeedData {\n    title: string;\n    url: string;\n  }\n  \n  export async function suggestFeedsWithWorker(topic: string, feeds: FeedData[]): Promise<FeedData[]> {\n    try {\n      const response = await fetch(\"/api/suggest\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ topic, feeds }),\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch suggestions\");\n      return await response.json();\n    } catch (err) {\n      console.error(\"suggestFeedsWithWorker error:\", err);\n      return [];\n    }\n  }\n  \n  "],"names":[],"mappings":"AAAA,8BAA8B;;;;AAOrB,eAAe,uBAAuB,KAAa,EAAE,KAAiB;IAC3E,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;YAC3C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAM;QACtC;QACA,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAClC,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/src/app/page.tsx"],"sourcesContent":["// app/page.tsx\n\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  getFeedUrlFromHtml,\n  fetchAndParseRSS,\n  loadFeedsFromStorage,\n  saveFeedToStorage,\n  type FeedData,\n} from \"@/lib/rssUtils\";\nimport { suggestFeedsWithWorker } from \"@/lib/useTransformerWorker\";\n\nconst PullToRefresh = dynamic(() => import(\"react-pull-to-refresh\"), { ssr: false });\n\nexport default function HomePage() {\n  const [feedUrlInput, setFeedUrlInput] = useState(\"\");\n  const [articles, setArticles] = useState<{ title: string; link: string; pubDate: string }[]>([]);\n  const [visibleCount, setVisibleCount] = useState(50);\n  const [topic, setTopic] = useState(\"\");\n  const [suggestedFeeds, setSuggestedFeeds] = useState<FeedData[]>([]);\n  const [isClient, setIsClient] = useState(false);\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          setVisibleCount((prev) => prev + 50);\n        }\n      },\n      { threshold: 1.0 }\n    );\n\n    if (loadMoreRef.current) observer.observe(loadMoreRef.current);\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    const loadSavedFeeds = async () => {\n      const feeds = loadFeedsFromStorage();\n      const allArticles = await Promise.all(\n        feeds.map(async (feed) => {\n          const data = await fetchAndParseRSS(feed.url);\n          return data?.items || [];\n        })\n      );\n      const sorted = allArticles.flat().sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n      setArticles(sorted);\n    };\n\n    setIsClient(true);\n    loadSavedFeeds();\n\n    const interval = setInterval(() => {\n      loadSavedFeeds();\n    }, 1000 * 60 * 10);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleAddFeed = async () => {\n    const resolvedFeedUrl = await getFeedUrlFromHtml(feedUrlInput);\n    if (resolvedFeedUrl) {\n      const feedData = await fetchAndParseRSS(resolvedFeedUrl);\n      if (feedData) {\n        saveFeedToStorage({ title: feedData.title, url: resolvedFeedUrl });\n        const feeds = loadFeedsFromStorage();\n        const allArticles = await Promise.all(\n          feeds.map(async (feed) => {\n            const data = await fetchAndParseRSS(feed.url);\n            return data?.items || [];\n          })\n        );\n        const sorted = allArticles.flat().sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n        setArticles(sorted);\n      }\n    }\n  };\n\n  const handleTopicSuggest = async () => {\n    const results = await suggestFeedsWithWorker(topic, []);\n    setSuggestedFeeds(results);\n  };\n\n  return (\n    <main className=\"space-y-8\">\n      <section className=\"space-y-4\">\n        <h1 className=\"text-2xl font-semibold text-gray-800\">Add Feed</h1>\n        <input\n          type=\"file\"\n          accept=\".opml, text/xml\"\n          onChange={async (e) => {\n            const file = e.target.files?.[0];\n            if (!file) return;\n            const text = await file.text();\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(text, \"text/xml\");\n            const outlines = doc.querySelectorAll(\"outline[type='rss']\");\n            outlines.forEach((el) => {\n              const url = el.getAttribute(\"xmlUrl\");\n              const title = el.getAttribute(\"title\") || el.getAttribute(\"text\") || url;\n              if (url) {\n                saveFeedToStorage({ title: title ?? url, url });\n              }\n            });\n            const feeds = loadFeedsFromStorage();\n            const allArticles = await Promise.all(\n              feeds.map(async (feed) => {\n                const data = await fetchAndParseRSS(feed.url);\n                return data?.items || [];\n              })\n            );\n            const sorted = allArticles.flat().sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n            setArticles(sorted);\n          }}\n          className=\"block mb-2 text-sm text-gray-700\"\n        />\n        <div className=\"flex flex-col sm:flex-row gap-3\">\n          <Input\n            placeholder=\"Enter site URL or RSS feed\"\n            value={feedUrlInput}\n            onChange={(e) => setFeedUrlInput(e.target.value)}\n            className=\"flex-1 border-gray-300\"\n          />\n          <Button onClick={handleAddFeed}>Add Feed</Button>\n        </div>\n      </section>\n\n      <section className=\"space-y-4\">\n        <h2 className=\"text-2xl font-semibold text-gray-800\">Suggest Feeds</h2>\n        <div className=\"flex flex-col sm:flex-row gap-3\">\n          <Input\n            placeholder=\"Enter a topic you're interested in\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            className=\"flex-1 border-gray-300\"\n          />\n          <Button onClick={handleTopicSuggest}>Suggest</Button>\n        </div>\n        <div className=\"grid gap-3\">\n          {suggestedFeeds.map((feed) => (\n            <Card key={feed.url} className=\"bg-white border border-gray-200 shadow-sm\">\n              <CardContent className=\"p-4\">\n                <p className=\"font-medium text-gray-800\">{feed.title}</p>\n                <p className=\"text-sm text-gray-500\">{feed.url}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-2xl font-semibold text-gray-800\">Articles</h2>\n          <Button\n            variant=\"outline\"\n            onClick={async () => {\n              const feeds = loadFeedsFromStorage();\n              const allArticles = await Promise.all(\n                feeds.map(async (feed) => {\n                  const data = await fetchAndParseRSS(feed.url);\n                  return data?.items || [];\n                })\n              );\n              const sorted = allArticles.flat().sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n              setArticles(sorted);\n              setVisibleCount(50);\n            }}\n          >\n            Refresh\n          </Button>\n        </div>\n\n        {isClient && (\n          <PullToRefresh\n            onRefresh={async () => {\n              const feeds = loadFeedsFromStorage();\n              const allArticles = await Promise.all(\n                feeds.map(async (feed) => {\n                  const data = await fetchAndParseRSS(feed.url);\n                  return data?.items || [];\n                })\n              );\n              const sorted = allArticles.flat().sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n              setArticles(sorted);\n              setVisibleCount(50);\n            }}\n          >\n            <div className=\"grid gap-4\">\n              {articles.slice(0, visibleCount).map((article, idx) => (\n                <Card key={idx} className=\"bg-white border border-gray-200 shadow-sm\">\n                  <CardContent className=\"p-4\">\n                    <a\n                      href={article.link}\n                      className=\"text-lg font-medium text-blue-600 hover:underline\"\n                    >\n                      {article.title}\n                    </a>\n                    <p className=\"text-sm text-gray-500\">{article.pubDate}</p>\n                  </CardContent>\n                </Card>\n              ))}\n              <div ref={loadMoreRef} className=\"h-10\" />\n            </div>\n          </PullToRefresh>\n        )}\n      </section>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,GACxC,AAAC,UAAOF,QAAQC,GAAG,CAACC,kBAAkB,IACtC;IAEJ,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewg/Projects/infrss/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}}]
}